
```{r}
library(readxl)
library(dplyr)
library(sf) #pliki shp do wykresów mapowych (ShapeFile)
library(tmap) #dedykowany do danych przestrzennych wzorowany na ggplot
library(tmaptools)
library(rvest)
library(stringr)
library(ggthemes)
library(ggcorrplot)
library(ggplot2)
library(ggpubr)
```

```{r}
kraje <- read.table(file = 'data_counties.csv',  sep=",")
head(kraje)
```

```{r}
dane <- read.table(file = 'data_municipalities.csv', sep=',',  header = TRUE)
head(dane)
```

```{r}
gminy <- st_read('map_municipalities.shp') 
partycje <- st_read('map_partitions.shp') 
```

```{r}
 tm_shape(gminy)+ #podanie gdzie się znajdują dane analogia do ggplot
  tm_polygons(col='mncplty_c') # podanie zmiennnych
```

```{r}
daneSzczep <- dane %>% select(c(1,2,4)) %>% rename(mncplty_c=1, Gmina=2, ProcZaszczepionych=3) %>% mutate(ProcZaszczepionych=as.numeric(ProcZaszczepionych, na.rm = TRUE)) #TRZEBA COŚ ZROBIĆ Z PUSTYMI WARTOŚCIAMI
class(dane$ProcZaszczepionych)
```


```{r}
gm_razem <- left_join(gminy,daneSzczep)
head(gm_razem)
```



```{r}
tm_shape(gm_razem) +
  tm_polygons(col='ProcZaszczepionych', title = "Szczepienia", palette = "YlGnBu", style = "kmeans", n = 8) +
  tm_layout(legend.format = list(text.separator = '-'), legend.position = c("left", "bottom"))
          
```

```{r}
# 1. Czy wielkość gmin/miast ma znaczenie?
wielkosc <- dane
wielkosc <- wielkosc %>% select(c(1,2,4,5,59,60)) %>% rename(mncplty_c=1, Nazwa=2, ProcZaszczep=3, Populacja=4, Powierzchnia=5, Zaludnienie=6)
wielkosc
```

```{r}
plot(y=wielkosc$ProcZaszczep, x=wielkosc$Powierzchnia)

wielkosc <- wielkosc %>%
  mutate_at(vars(mncplty_c, ProcZaszczep, Populacja, Powierzchnia, Zaludnienie), as.numeric)

wielkosc

model <- lm(ProcZaszczep~Powierzchnia, data=wielkosc)
model

summary(model)
summary(model)$r.squared
```
```{r}

model3 <- lm(ProcZaszczep~ Populacja + Powierzchnia, data = wielkosc)
summary(model3)
```

y <- wielkosc$ProcZaszczep
x <- wielkosc$Powierzchnia
model_potegowy <- nls(y ~ a * x^b, data = data.frame(x = x, y = y), start = list(a = 1, b = 1))
#summary(model_potegowy)
SST <- sum((y - mean(y))^2)
SSR <- sum(residuals(model_potegowy)^2)
rsquared <- 1 - SSR / SST

# Wyświetlenie współczynnika determinacji
print(rsquared)

# Usunięcie obserwacji z brakami danych
wielkosc <- data.frame(x = x, y = y)
wielkosc <- wielkosc[complete.cases(wielkosc), ]

# Model potęgowy
modelp <- nls(y ~ a * x^b, data = wielkosc, start = list(a = 1, b = 1))

# Obliczanie współczynnika determinacji
SST <- sum((wielkosc$y - mean(wielkosc$y))^2)
SSR <- sum(residuals(modelp)^2)
rsquared <- 1 - SSR / SST

# Wyświetlenie współczynnika determinacji
print(rsquared)



```{r}
plot(x=dane$population_per_pharmacy
     , y=dane$percent_vaccinated)
```
```{r}
kolumny_numeryczne <- sapply(dane, is.numeric)
naglowki <- names(dane)[kolumny_numeryczne]
naglowki <- naglowki[!grepl("^population", naglowki)]

naglowki
```



```{r}
mackor <-
  dane %>% select(naglowki) %>% 
  cor(use='everything' ,method = 'pearson') %>% round(2)

mackor_filtr <- mackor
mackor_filtr[abs(mackor_filtr) <= 0.3] <- NA

ggcorrplot(mackor_filtr,
           lab = TRUE,
           method = 'circle',
           ggtheme = theme_bw())
```


